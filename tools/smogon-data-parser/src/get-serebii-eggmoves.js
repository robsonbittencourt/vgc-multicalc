import axios from "axios"
import * as cheerio from "cheerio"
import fs from "fs"

const pokemonList = [
  "incineroar",
  "rillaboom",
  "amoonguss",
  "whimsicott",
  "grimmsnarl",
  "volcarona",
  "farigiraf",
  "ursaluna",
  "clefairy",
  "weezing-galar",
  "indeedee-f",
  "sinistcha",
  "annihilape",
  "basculegion",
  "jumpluff",
  "sneasler",
  "dondozo",
  "tatsugiri",
  "torkoal",
  "pelipper",
  "dragonite",
  "alcremie",
  "ursaluna-bloodmoon",
  "porygon2",
  "chesnaught",
  "gothitelle",
  "hariyama",
  "glimmora",
  "pachirisu",
  "rhydon",
  "pikachu",
  "maushold",
  "tsareena",
  "raichu",
  "lilligant-hisui",
  "talonflame",
  "archaludon",
  "comfey",
  "kingambit",
  "araquanid",
  "garganacl",
  "gyarados",
  "scraggy",
  "scovillain",
  "venusaur",
  "dachsbun",
  "mimikyu",
  "spiritomb",
  "electabuzz",
  "dragapult",
  "flamigo",
  "mienshao",
  "tyranitar",
  "hippowdon",
  "dugtrio",
  "oranguru",
  "gastrodon",
  "overqwil",
  "sableye",
  "shiftry",
  "murkrow",
  "tinkaton",
  "hitmontop",
  "rhyperior",
  "ceruledge",
  "toxapex",
  "armarouge",
  "mandibuzz",
  "chandelure",
  "weezing",
  "ninetales-alola",
  "snorlax",
  "swampert",
  "bulbasaur",
  "ivysaur",
  "charmander",
  "charmeleon",
  "charizard",
  "squirtle",
  "wartortle",
  "blastoise",
  "ekans",
  "arbok",
  "raichu-alola",
  "sandshrew",
  "sandshrew-alola",
  "sandslash",
  "sandslash-alola",
  "clefable",
  "vulpix",
  "vulpix-alola",
  "ninetales",
  "jigglypuff",
  "wigglytuff",
  "oddish",
  "gloom",
  "vileplume",
  "venonat",
  "venomoth",
  "diglett",
  "diglett-alola",
  "dugtrio-alola",
  "meowth",
  "meowth-alola",
  "meowth-galar",
  "persian",
  "persian-alola",
  "psyduck",
  "golduck",
  "mankey",
  "primeape",
  "growlithe",
  "growlithe-hisui",
  "arcanine",
  "arcanine-hisui",
  "poliwag",
  "poliwhirl",
  "poliwrath",
  "bellsprout",
  "weepinbell",
  "victreebel",
  "tentacool",
  "tentacruel",
  "geodude",
  "geodude-alola",
  "graveler",
  "graveler-alola",
  "golem",
  "golem-alola",
  "slowpoke",
  "slowpoke-galar",
  "slowbro",
  "slowbro-galar",
  "magnemite",
  "magneton",
  "doduo",
  "dodrio",
  "seel",
  "dewgong",
  "grimer",
  "grimer-alola",
  "muk",
  "muk-alola",
  "shellder",
  "cloyster",
  "gastly",
  "haunter",
  "gengar",
  "drowzee",
  "hypno",
  "voltorb",
  "voltorb-hisui",
  "electrode",
  "electrode-hisui",
  "exeggcute",
  "exeggutor",
  "exeggutor-alola",
  "hitmonlee",
  "hitmonchan",
  "koffing",
  "rhyhorn",
  "chansey",
  "horsea",
  "seadra",
  "scyther",
  "magmar",
  "tauros",
  "tauros-paldea-combat",
  "tauros-paldea-blaze",
  "tauros-paldea-aqua",
  "magikarp",
  "lapras",
  "eevee",
  "vaporeon",
  "jolteon",
  "flareon",
  "porygon",
  "dratini",
  "dragonair",
  "chikorita",
  "bayleef",
  "meganium",
  "cyndaquil",
  "quilava",
  "typhlosion",
  "typhlosion-hisui",
  "totodile",
  "croconaw",
  "feraligatr",
  "sentret",
  "furret",
  "hoothoot",
  "noctowl",
  "spinarak",
  "ariados",
  "chinchou",
  "lanturn",
  "pichu",
  "cleffa",
  "igglybuff",
  "mareep",
  "flaaffy",
  "ampharos",
  "bellossom",
  "marill",
  "azumarill",
  "sudowoodo",
  "politoed",
  "hoppip",
  "skiploom",
  "aipom",
  "sunkern",
  "sunflora",
  "yanma",
  "wooper",
  "wooper-paldea",
  "quagsire",
  "espeon",
  "umbreon",
  "slowking",
  "slowking-galar",
  "misdreavus",
  "girafarig",
  "pineco",
  "forretress",
  "dunsparce",
  "gligar",
  "snubbull",
  "granbull",
  "qwilfish",
  "qwilfish-hisui",
  "scizor",
  "heracross",
  "sneasel",
  "sneasel-hisui",
  "teddiursa",
  "ursaring",
  "slugma",
  "magcargo",
  "swinub",
  "piloswine",
  "delibird",
  "skarmory",
  "houndour",
  "houndoom",
  "kingdra",
  "phanpy",
  "donphan",
  "stantler",
  "tyrogue",
  "elekid",
  "magby",
  "blissey",
  "larvitar",
  "pupitar",
  "treecko",
  "grovyle",
  "sceptile",
  "torchic",
  "combusken",
  "blaziken",
  "mudkip",
  "marshtomp",
  "poochyena",
  "mightyena",
  "lotad",
  "lombre",
  "ludicolo",
  "seedot",
  "nuzleaf",
  "wingull",
  "ralts",
  "kirlia",
  "gardevoir",
  "surskit",
  "masquerain",
  "shroomish",
  "breloom",
  "slakoth",
  "vigoroth",
  "slaking",
  "makuhita",
  "azurill",
  "nosepass",
  "meditite",
  "medicham",
  "plusle",
  "minun",
  "volbeat",
  "illumise",
  "gulpin",
  "swalot",
  "numel",
  "camerupt",
  "spoink",
  "grumpig",
  "trapinch",
  "vibrava",
  "flygon",
  "cacnea",
  "cacturne",
  "swablu",
  "altaria",
  "zangoose",
  "seviper",
  "barboach",
  "whiscash",
  "corphish",
  "crawdaunt",
  "feebas",
  "milotic",
  "shuppet",
  "banette",
  "duskull",
  "dusclops",
  "tropius",
  "chimecho",
  "snorunt",
  "glalie",
  "luvdisc",
  "bagon",
  "shelgon",
  "salamence",
  "beldum",
  "metang",
  "metagross",
  "turtwig",
  "grotle",
  "torterra",
  "chimchar",
  "monferno",
  "infernape",
  "piplup",
  "prinplup",
  "empoleon",
  "starly",
  "staravia",
  "staraptor",
  "kricketot",
  "kricketune",
  "shinx",
  "luxio",
  "luxray",
  "cranidos",
  "rampardos",
  "shieldon",
  "bastiodon",
  "combee",
  "vespiquen",
  "buizel",
  "floatzel",
  "shellos",
  "ambipom",
  "drifloon",
  "drifblim",
  "mismagius",
  "honchkrow",
  "chingling",
  "stunky",
  "skuntank",
  "bronzor",
  "bronzong",
  "bonsly",
  "happiny",
  "gible",
  "gabite",
  "garchomp",
  "munchlax",
  "riolu",
  "lucario",
  "hippopotas",
  "croagunk",
  "toxicroak",
  "finneon",
  "lumineon",
  "snover",
  "abomasnow",
  "weavile",
  "magnezone",
  "electivire",
  "magmortar",
  "yanmega",
  "leafeon",
  "glaceon",
  "gliscor",
  "mamoswine",
  "porygon-z",
  "gallade",
  "probopass",
  "dusknoir",
  "froslass",
  "rotom",
  "rotom-heat",
  "rotom-wash",
  "rotom-frost",
  "rotom-fan",
  "rotom-mow",
  "snivy",
  "servine",
  "serperior",
  "tepig",
  "pignite",
  "emboar",
  "oshawott",
  "dewott",
  "samurott",
  "samurott-hisui",
  "blitzle",
  "zebstrika",
  "drilbur",
  "excadrill",
  "timburr",
  "gurdurr",
  "conkeldurr",
  "sewaddle",
  "swadloon",
  "leavanny",
  "cottonee",
  "petilil",
  "lilligant",
  "basculin",
  "sandile",
  "krokorok",
  "krookodile",
  "scrafty",
  "zorua",
  "zorua-hisui",
  "zoroark",
  "zoroark-hisui",
  "minccino",
  "cinccino",
  "gothita",
  "gothorita",
  "solosis",
  "duosion",
  "reuniclus",
  "ducklett",
  "swanna",
  "deerling",
  "sawsbuck",
  "foongus",
  "alomomola",
  "joltik",
  "galvantula",
  "tynamo",
  "eelektrik",
  "eelektross",
  "litwick",
  "lampent",
  "axew",
  "fraxure",
  "haxorus",
  "cubchoo",
  "beartic",
  "cryogonal",
  "mienfoo",
  "golett",
  "golurk",
  "pawniard",
  "bisharp",
  "rufflet",
  "braviary",
  "braviary-hisui",
  "vullaby",
  "deino",
  "zweilous",
  "hydreigon",
  "larvesta",
  "chespin",
  "quilladin",
  "fennekin",
  "braixen",
  "delphox",
  "froakie",
  "frogadier",
  "greninja",
  "fletchling",
  "fletchinder",
  "scatterbug",
  "spewpa",
  "vivillon",
  "litleo",
  "pyroar",
  "flabebe",
  "floette",
  "florges",
  "skiddo",
  "gogoat",
  "espurr",
  "meowstic",
  "inkay",
  "malamar",
  "skrelp",
  "dragalge",
  "clauncher",
  "clawitzer",
  "sylveon",
  "hawlucha",
  "dedenne",
  "carbink",
  "goomy",
  "sliggoo",
  "sliggoo-hisui",
  "goodra",
  "goodra-hisui",
  "klefki",
  "phantump",
  "trevenant",
  "bergmite",
  "avalugg",
  "avalugg-hisui",
  "noibat",
  "noivern",
  "rowlet",
  "dartrix",
  "decidueye",
  "decidueye-hisui",
  "litten",
  "torracat",
  "popplio",
  "brionne",
  "primarina",
  "pikipek",
  "trumbeak",
  "toucannon",
  "yungoos",
  "gumshoos",
  "grubbin",
  "charjabug",
  "vikavolt",
  "crabrawler",
  "crabominable",
  "oricorio",
  "oricorio-pom-pom",
  "oricorio-pa'u",
  "oricorio-sensu",
  "cutiefly",
  "ribombee",
  "rockruff",
  "lycanroc",
  "lycanroc-midnight",
  "lycanroc-dusk",
  "mareanie",
  "mudbray",
  "mudsdale",
  "dewpider",
  "fomantis",
  "lurantis",
  "salandit",
  "salazzle",
  "bounsweet",
  "steenee",
  "passimian",
  "sandygast",
  "palossand",
  "minior",
  "komala",
  "bruxish",
  "jangmoo",
  "hakamoo",
  "kommoo",
  "grookey",
  "thwackey",
  "scorbunny",
  "raboot",
  "cinderace",
  "sobble",
  "drizzile",
  "inteleon",
  "skwovet",
  "greedent",
  "rookidee",
  "corvisquire",
  "corviknight",
  "chewtle",
  "drednaw",
  "rolycoly",
  "carkol",
  "coalossal",
  "applin",
  "flapple",
  "appletun",
  "silicobra",
  "sandaconda",
  "cramorant",
  "arrokuda",
  "barraskewda",
  "toxel",
  "toxtricity",
  "sinistea",
  "polteageist",
  "hatenna",
  "hattrem",
  "hatterene",
  "impidimp",
  "morgrem",
  "perrserker",
  "milcery",
  "falinks",
  "pincurchin",
  "snom",
  "frosmoth",
  "stonjourner",
  "eiscue",
  "eiscue-noice",
  "indeedee",
  "morpeko",
  "cufant",
  "copperajah",
  "duraludon",
  "dreepy",
  "drakloak",
  "wyrdeer",
  "kleavor",
  "basculegion-f",
  "sprigatito",
  "floragato",
  "meowscarada",
  "fuecoco",
  "crocalor",
  "skeledirge",
  "quaxly",
  "quaxwell",
  "quaquaval",
  "lechonk",
  "oinkologne",
  "oinkologne-f",
  "tarountula",
  "spidops",
  "nymble",
  "lokix",
  "pawmi",
  "pawmo",
  "pawmot",
  "tandemaus",
  "fidough",
  "smoliv",
  "dolliv",
  "arboliva",
  "squawkabilly",
  "nacli",
  "naclstack",
  "charcadet",
  "tadbulb",
  "bellibolt",
  "wattrel",
  "kilowattrel",
  "maschiff",
  "mabosstiff",
  "shroodle",
  "grafaiai",
  "bramblin",
  "brambleghast",
  "toedscool",
  "toedscruel",
  "klawf",
  "capsakid",
  "rellor",
  "rabsca",
  "flittle",
  "espathra",
  "tinkatink",
  "tinkatuff",
  "wiglett",
  "wugtrio",
  "bombirdier",
  "finizen",
  "palafin",
  "palafin-hero",
  "varoom",
  "revavroom",
  "cyclizar",
  "orthworm",
  "glimmet",
  "greavard",
  "houndstone",
  "cetoddle",
  "cetitan",
  "veluza",
  "clodsire",
  "dudunsparce",
  "frigibax",
  "arctibax",
  "baxcalibur",
  "dipplin",
  "poltchageist",
  "hydrapple"
]

const baseUrl = "https://www.serebii.net/pokedex-sv/"

async function getEggMoves(pokemonName) {
  const baseName = pokemonName.split("-")[0].toLowerCase()
  const url = `${baseUrl}${baseName}/`

  try {
    const { data } = await axios.get(url)
    const $ = cheerio.load(data)

    const header = $("h3")
      .filter((_, el) => $(el).text().trim().toLowerCase() === "egg moves")
      .first()
    if (!header.length) {
      return []
    }

    const tbody = header.closest("tbody")
    if (!tbody.length) {
      return []
    }

    const rows = tbody.find("tr").toArray()

    const validFormsMap = {
      normal: ["Normal"],
      alola: ["Alola Form"],
      galar: ["Galarian Form"],
      hisui: ["Hisuian Form"],
      paldea: ["Paldean Form"]
    }

    let formKey = "normal"
    const parts = pokemonName.toLowerCase().split("-")
    if (parts.length > 1) {
      formKey = parts[1]
    }
    const validForms = validFormsMap[formKey] || ["Normal"]

    const moves = []

    for (let i = 2; i < rows.length; i += 2) {
      const dataRow = $(rows[i])
      const descRow = $(rows[i + 1])

      const moveName = dataRow.find("td").first().text().trim()
      if (!moveName) continue

      const lastTd = dataRow.find("td").last()
      const imgs = lastTd.find("img").toArray()

      if (imgs.length === 0) {
        // Caso sem imagens: aceita o move normalmente
        moves.push(moveName)
        continue
      }

      // Se tem imagem, pega os alt
      const altForms = imgs.map(img => $(img).attr("alt") || "").filter(alt => alt) // remove alt vazios

      // Verifica se alguma forma é válida
      const isValid = altForms.some(alt => validForms.includes(alt))

      if (isValid) {
        moves.push(moveName)
      }
    }

    return moves
  } catch (err) {
    return []
  }
}

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms))
}

;(async () => {
  const eggMovesDict = {}
  const errorList = []

  for (const name of pokemonList) {
    const moves = await getEggMoves(name)
    if (moves.length === 0) {
      console.warn(`No Egg Moves found for ${name}`)
      errorList.push(name)
    } else {
      const formattedMoves = moves.map(m => m.toLowerCase().replace(/\s+/g, ""))
      console.log(`${name}: [${formattedMoves.map(m => `"${m}"`).join(", ")}]`)
      eggMovesDict[name] = formattedMoves
    }

    await sleep(1000)
  }

  fs.writeFileSync("src/eggMoves.js", "const eggMoves = " + JSON.stringify(eggMovesDict, null, 2) + ";\n")
  fs.writeFileSync("src/error.js", "const error = " + JSON.stringify(errorList, null, 2) + ";\n")

  console.log("Saved eggMoves.js and erro.js")
})()
