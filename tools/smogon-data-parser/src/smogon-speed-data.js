import { Generations, Pokemon } from "@robsonbittencourt/calc"
import axios from "axios"

export async function smogonSpeedData(date, reg) {
  const year = date.substring(0, date.indexOf("-"))
  const response = await axios.get(`https://www.smogon.com/stats/${date}/chaos/gen9vgc${year}reg${reg}bo3-0.json`)

  return allPokemon().map(pokemon => {
    const data = response.data.data[pokemon]

    return generateStatistics(pokemon, data, date)
  })
}

function generateStatistics(pokemon, data, date) {
  if (!data) {
    return {
      [pokemon]: {
        referenceDate: date,
        baseSpeed: calculateSpeedBase(pokemon),
        minSpeed: calculateMinSpeed(pokemon),
        maxSpeed: calculateMaxSpeed(pokemon),
        minSpeedWithIvZero: calculateMinSpeedWithIvZero(pokemon),
        maxSpeedWithNature: calculateMaxSpeedWithNature(pokemon),
        statistics: []
      }
    }
  }

  const statistics = []

  calculateUsage(data, pokemon, statistics)
  calculateParadoxAbilities(data, pokemon, statistics)
  calculateChoiceScarf(data, pokemon, statistics)

  return {
    [pokemon]: {
      referenceDate: date,
      baseSpeed: calculateSpeedBase(pokemon),
      minSpeed: calculateMinSpeed(pokemon),
      maxSpeed: calculateMaxSpeed(pokemon),
      minSpeedWithIvZero: calculateMinSpeedWithIvZero(pokemon),
      maxSpeedWithNature: calculateMaxSpeedWithNature(pokemon),
      choiceScarfPercentage: itemPercentage(data, "choicescarf"),
      choiceScarfIsMoreUsed: isMoreUsedItem(data, "choicescarf"),
      boosterEnergyPercentage: itemPercentage(data, "boosterenergy"),
      boosterEnergyIsMoreUsed: isMoreUsedItem(data, "boosterenergy"),
      statistics
    }
  }
}

function itemPercentage(data, item) {
  const total = data["Raw count"]
  const itemUsage = data.Items[item]

  return calculatePercentage(itemUsage, total)
}

function isMoreUsedItem(data, itemName) {
  if (!data.Items[itemName]) return false

  const maxValue = Math.max(...Object.values(data.Items))
  return data.Items[itemName] === maxValue
}

function calculateSpeedBase(pokemon) {
  return new Pokemon(Generations.get(9), pokemon).species.baseStats.spe
}

function calculateMinSpeedWithIvZero(pokemon) {
  return new Pokemon(Generations.get(9), pokemon, { level: 50, nature: "Quiet", evs: { spe: 0 }, ivs: { spe: 0 } }).stats.spe
}

function calculateMinSpeed(pokemon) {
  return new Pokemon(Generations.get(9), pokemon, { level: 50, nature: "Serious", evs: { spe: 0 } }).stats.spe
}

function calculateMaxSpeed(pokemon) {
  return new Pokemon(Generations.get(9), pokemon, { level: 50, nature: "Serious", evs: { spe: 252 } }).stats.spe
}

function calculateMaxSpeedWithNature(pokemon) {
  return new Pokemon(Generations.get(9), pokemon, { level: 50, nature: "Timid", evs: { spe: 252 } }).stats.spe
}

function calculateUsage(data, pokemon, statistics) {
  const total = data["Raw count"]
  const countBySpeedEvs = aggregateSpeedSpreads(pokemon, data.Spreads)

  const topThreeUsage = Object.entries(countBySpeedEvs)
    .sort((a, b) => b[1].count - a[1].count)
    .slice(0, 3)

  const result = topThreeUsage
    .filter(([speed, info]) => hasRelevantUsage(info.count, total))
    .map(([speed, info]) => buildStatistic(info.count, countBySpeedEvs, speed, total, info.speedEv, info.nature))
    .sort((a, b) => a.speed - b.speed)

  statistics.push(...result)
}

function calculateParadoxAbilities(data, pokemon, statistics) {
  if (hasAbility(data, "protosynthesis") || hasAbility(data, "quarkdrive")) {
    const total = data["Raw count"]
    const speed = pokemonSpeedPlus50percent(pokemon)
    const boosterExists = hasItem(data, "boosterenergy")
    const percentage = boosterExists ? calculatePercentage(data.Items.boosterenergy, total) : 0

    statistics.push({ type: "booster", speed, percentile: 100, percentage, speedEv: 252, nature: "" })
  }
}

function calculateChoiceScarf(data, pokemon, statistics) {
  if (hasItem(data, "choicescarf")) {
    const total = data["Raw count"]
    const percentage = calculatePercentage(data.Items.choicescarf, total)
    const isRelevantUsage = percentage >= 5

    if (isRelevantUsage) {
      const speed = pokemonSpeedPlus50percent(pokemon)
      statistics.push({ type: "scarf", speed, percentile: 100, percentage, speedEv: 252, nature: "" })
    }
  }
}

function aggregateSpeedSpreads(pokemon, spreads) {
  const speedSpreads = {}

  const orderedSpreads = Object.fromEntries(Object.entries(spreads).sort((a, b) => b[1] - a[1]))

  for (const key in orderedSpreads) {
    const nature = key.split(":")[0]
    const speedEv = key.split(":")[1].split("/")[5]
    const count = orderedSpreads[key]

    const speed = calculateSpeedValue(pokemon, nature, speedEv)

    if (speedSpreads[speed]) {
      speedSpreads[speed].count += count
    } else {
      speedSpreads[speed] = { count, nature, speedEv }
    }
  }

  return speedSpreads
}

function calculateSpeedValue(pokemon, nature, speedEv) {
  const negativeSpeedNatures = ["Brave", "Quiet", "Relaxed", "Sassy"]
  const ivs = negativeSpeedNatures.includes(nature) ? { spe: 0 } : { spe: 31 }

  return new Pokemon(Generations.get(9), pokemon, { level: 50, nature, evs: { spe: speedEv }, ivs }).stats.spe
}

function hasRelevantUsage(count, total) {
  const relevantPercentage = 10
  return calculatePercentage(count, total) > relevantPercentage
}

function buildStatistic(count, countBySpeedEvs, speed, total, speedEv, nature) {
  const percentile = calculatePercentage(sumUntilEvTarget(countBySpeedEvs, speed), total)
  const percentage = calculatePercentage(count, total)
  return { type: "usage", speed: Number(speed), percentile, percentage, speedEv: Number(speedEv), nature }
}

function sumUntilEvTarget(speedValues, speed) {
  const orderedKeys = Object.keys(speedValues)
    .map(Number)
    .sort((a, b) => a - b)

  let sum = 0

  for (const key of orderedKeys) {
    sum += speedValues[key].count
    if (key === Number(speed)) break
  }

  return sum
}

function hasAbility(data, ability) {
  return Object.keys(data.Abilities).includes(ability)
}

function hasItem(data, item) {
  return Object.keys(data.Items).includes(item)
}

function pokemonSpeedPlus50percent(pokemon) {
  return Math.floor(new Pokemon(Generations.get(9), pokemon, { level: 50, nature: "Timid", evs: { spe: 252 } }).stats.spe * 1.5)
}

function calculatePercentage(value, total) {
  if (!value) return 0

  return Math.round((value * 100) / total)
}

function allPokemon() {
  return [
    "Abomasnow",
    "Aipom",
    "Alcremie",
    "Alomomola",
    "Altaria",
    "Ambipom",
    "Amoonguss",
    "Ampharos",
    "Annihilape",
    "Appletun",
    "Applin",
    "Araquanid",
    "Arbok",
    "Arboliva",
    "Arcanine",
    "Arcanine-Hisui",
    "Arceus",
    "Archaludon",
    "Arctibax",
    "Ariados",
    "Armarouge",
    "Arrokuda",
    "Articuno",
    "Articuno-Galar",
    "Avalugg",
    "Avalugg-Hisui",
    "Axew",
    "Azelf",
    "Azumarill",
    "Azurill",
    "Bagon",
    "Banette",
    "Barboach",
    "Barraskewda",
    "Basculegion",
    "Basculegion-F",
    "Basculin",
    "Bastiodon",
    "Baxcalibur",
    "Bayleef",
    "Beartic",
    "Beldum",
    "Bellibolt",
    "Bellossom",
    "Bellsprout",
    "Bergmite",
    "Bisharp",
    "Blastoise",
    "Blaziken",
    "Blissey",
    "Blitzle",
    "Bombirdier",
    "Bonsly",
    "Bounsweet",
    "Braixen",
    "Brambleghast",
    "Bramblin",
    "Braviary",
    "Braviary-Hisui",
    "Breloom",
    "Brionne",
    "Bronzong",
    "Bronzor",
    "Brute Bonnet",
    "Bruxish",
    "Buizel",
    "Bulbasaur",
    "Cacnea",
    "Cacturne",
    "Calyrex",
    "Calyrex-Ice",
    "Calyrex-Shadow",
    "Camerupt",
    "Capsakid",
    "Carbink",
    "Carkol",
    "Ceruledge",
    "Cetitan",
    "Cetoddle",
    "Chandelure",
    "Chansey",
    "Charcadet",
    "Charizard",
    "Charjabug",
    "Charmander",
    "Charmeleon",
    "Chesnaught",
    "Chespin",
    "Chewtle",
    "Chi-Yu",
    "Chien-Pao",
    "Chikorita",
    "Chimchar",
    "Chimecho",
    "Chinchou",
    "Chingling",
    "Cinccino",
    "Cinderace",
    "Clauncher",
    "Clawitzer",
    "Clefable",
    "Clefairy",
    "Cleffa",
    "Clodsire",
    "Cloyster",
    "Coalossal",
    "Cobalion",
    "Combee",
    "Combusken",
    "Comfey",
    "Conkeldurr",
    "Copperajah",
    "Corphish",
    "Corviknight",
    "Corvisquire",
    "Cosmoem",
    "Cosmog",
    "Cottonee",
    "Crabominable",
    "Crabrawler",
    "Cramorant",
    "Cranidos",
    "Crawdaunt",
    "Cresselia",
    "Croagunk",
    "Crocalor",
    "Croconaw",
    "Cryogonal",
    "Cubchoo",
    "Cufant",
    "Cutiefly",
    "Cyclizar",
    "Cyndaquil",
    "Dachsbun",
    "Darkrai",
    "Dartrix",
    "Decidueye",
    "Decidueye-Hisui",
    "Dedenne",
    "Deerling",
    "Deino",
    "Delibird",
    "Delphox",
    "Deoxys",
    "Deoxys-Attack",
    "Deoxys-Defense",
    "Deoxys-Speed",
    "Dewgong",
    "Dewott",
    "Dewpider",
    "Dialga",
    "Dialga-Origin",
    "Diancie",
    "Diglett",
    "Diglett-Alola",
    "Dipplin",
    "Ditto",
    "Dodrio",
    "Doduo",
    "Dolliv",
    "Dondozo",
    "Donphan",
    "Dragalge",
    "Dragapult",
    "Dragonair",
    "Dragonite",
    "Drakloak",
    "Dratini",
    "Drednaw",
    "Dreepy",
    "Drifblim",
    "Drifloon",
    "Drilbur",
    "Drizzile",
    "Drowzee",
    "Ducklett",
    "Dudunsparce",
    "Dugtrio",
    "Dugtrio-Alola",
    "Dunsparce",
    "Duosion",
    "Duraludon",
    "Dusclops",
    "Dusknoir",
    "Duskull",
    "Eelektrik",
    "Eelektross",
    "Eevee",
    "Eiscue",
    "Eiscue-Noice",
    "Ekans",
    "Electabuzz",
    "Electivire",
    "Electrode",
    "Electrode-Hisui",
    "Elekid",
    "Emboar",
    "Empoleon",
    "Enamorus",
    "Enamorus-Therian",
    "Entei",
    "Espathra",
    "Espeon",
    "Espurr",
    "Eternatus",
    "Excadrill",
    "Exeggcute",
    "Exeggutor",
    "Exeggutor-Alola",
    "Falinks",
    "Farigiraf",
    "Feebas",
    "Fennekin",
    "Feraligatr",
    "Fezandipiti",
    "Fidough",
    "Finizen",
    "Finneon",
    "Flaaffy",
    "Flabébé",
    "Flamigo",
    "Flapple",
    "Flareon",
    "Fletchinder",
    "Fletchling",
    "Flittle",
    "Floatzel",
    "Floette",
    "Floragato",
    "Florges",
    "Flutter Mane",
    "Flygon",
    "Fomantis",
    "Foongus",
    "Forretress",
    "Fraxure",
    "Frigibax",
    "Froakie",
    "Frogadier",
    "Froslass",
    "Frosmoth",
    "Fuecoco",
    "Furret",
    "Gabite",
    "Gallade",
    "Galvantula",
    "Garchomp",
    "Gardevoir",
    "Garganacl",
    "Gastly",
    "Gastrodon",
    "Gengar",
    "Geodude",
    "Geodude-Alola",
    "Gholdengo",
    "Gible",
    "Gimmighoul",
    "Gimmighoul-Roaming",
    "Girafarig",
    "Giratina",
    "Giratina-Origin",
    "Glaceon",
    "Glalie",
    "Glastrier",
    "Gligar",
    "Glimmet",
    "Glimmora",
    "Gliscor",
    "Gloom",
    "Gogoat",
    "Golduck",
    "Golem",
    "Golem-Alola",
    "Golett",
    "Golurk",
    "Goodra",
    "Goodra-Hisui",
    "Goomy",
    "Gothita",
    "Gothitelle",
    "Gothorita",
    "Gouging Fire",
    "Grafaiai",
    "Granbull",
    "Graveler",
    "Graveler-Alola",
    "Great Tusk",
    "Greavard",
    "Greedent",
    "Greninja",
    "Grimer",
    "Grimer-Alola",
    "Grimmsnarl",
    "Grookey",
    "Grotle",
    "Groudon",
    "Grovyle",
    "Growlithe",
    "Growlithe-Hisui",
    "Grubbin",
    "Grumpig",
    "Gulpin",
    "Gumshoos",
    "Gurdurr",
    "Gyarados",
    "Hakamo-o",
    "Happiny",
    "Hariyama",
    "Hatenna",
    "Hatterene",
    "Hattrem",
    "Haunter",
    "Hawlucha",
    "Haxorus",
    "Heatran",
    "Heracross",
    "Hippopotas",
    "Hippowdon",
    "Hitmonchan",
    "Hitmonlee",
    "Hitmontop",
    "Ho-Oh",
    "Honchkrow",
    "Hoopa",
    "Hoopa-Unbound",
    "Hoothoot",
    "Hoppip",
    "Horsea",
    "Houndoom",
    "Houndour",
    "Houndstone",
    "Hydrapple",
    "Hydreigon",
    "Hypno",
    "Igglybuff",
    "Illumise",
    "Impidimp",
    "Incineroar",
    "Indeedee",
    "Indeedee-F",
    "Infernape",
    "Inkay",
    "Inteleon",
    "Iron Boulder",
    "Iron Bundle",
    "Iron Crown",
    "Iron Hands",
    "Iron Jugulis",
    "Iron Leaves",
    "Iron Moth",
    "Iron Thorns",
    "Iron Treads",
    "Iron Valiant",
    "Ivysaur",
    "Jangmo-o",
    "Jigglypuff",
    "Jirachi",
    "Jolteon",
    "Joltik",
    "Jumpluff",
    "Keldeo",
    "Kilowattrel",
    "Kingambit",
    "Kingdra",
    "Kirlia",
    "Klawf",
    "Kleavor",
    "Klefki",
    "Koffing",
    "Komala",
    "Kommo-o",
    "Koraidon",
    "Kricketot",
    "Kricketune",
    "Krokorok",
    "Krookodile",
    "Kubfu",
    "Kyogre",
    "Kyurem",
    "Kyurem-Black",
    "Kyurem-White",
    "Lampent",
    "Landorus",
    "Landorus-Therian",
    "Lanturn",
    "Lapras",
    "Larvesta",
    "Larvitar",
    "Latias",
    "Latios",
    "Leafeon",
    "Leavanny",
    "Lechonk",
    "Lilligant",
    "Lilligant-Hisui",
    "Litleo",
    "Litten",
    "Litwick",
    "Lokix",
    "Lombre",
    "Lotad",
    "Lucario",
    "Ludicolo",
    "Lugia",
    "Lumineon",
    "Lunala",
    "Lurantis",
    "Luvdisc",
    "Luxio",
    "Luxray",
    "Lycanroc",
    "Lycanroc-Dusk",
    "Lycanroc-Midnight",
    "Mabosstiff",
    "Magby",
    "Magcargo",
    "Magearna",
    "Magikarp",
    "Magmar",
    "Magmortar",
    "Magnemite",
    "Magneton",
    "Magnezone",
    "Makuhita",
    "Malamar",
    "Mamoswine",
    "Manaphy",
    "Mandibuzz",
    "Mankey",
    "Mareanie",
    "Mareep",
    "Marill",
    "Marshtomp",
    "Maschiff",
    "Masquerain",
    "Maushold",
    "Medicham",
    "Meditite",
    "Meganium",
    "Meloetta",
    "Meloetta-Pirouette",
    "Meowscarada",
    "Meowstic",
    "Meowth",
    "Meowth-Alola",
    "Meowth-Galar",
    "Mesprit",
    "Metagross",
    "Metang",
    "Mew",
    "Mewtwo",
    "Mienfoo",
    "Mienshao",
    "Mightyena",
    "Milcery",
    "Milotic",
    "Mimikyu",
    "Minccino",
    "Minior",
    "Minun",
    "Miraidon",
    "Misdreavus",
    "Mismagius",
    "Moltres",
    "Moltres-Galar",
    "Monferno",
    "Morgrem",
    "Morpeko",
    "Mudbray",
    "Mudkip",
    "Mudsdale",
    "Muk",
    "Muk-Alola",
    "Munchlax",
    "Munkidori",
    "Murkrow",
    "Nacli",
    "Naclstack",
    "Necrozma",
    "Necrozma-Dawn-Wings",
    "Necrozma-Dusk-Mane",
    "Ninetales",
    "Ninetales-Alola",
    "Noctowl",
    "Noibat",
    "Noivern",
    "Nosepass",
    "Numel",
    "Nuzleaf",
    "Nymble",
    "Oddish",
    "Ogerpon",
    "Ogerpon-Cornerstone",
    "Ogerpon-Hearthflame",
    "Ogerpon-Wellspring",
    "Oinkologne",
    "Oinkologne-F",
    "Okidogi",
    "Oranguru",
    "Oricorio",
    "Oricorio-Pa'u",
    "Oricorio-Pom-Pom",
    "Oricorio-Sensu",
    "Orthworm",
    "Oshawott",
    "Overqwil",
    "Pachirisu",
    "Palafin",
    "Palafin-Hero",
    "Palkia",
    "Palkia-Origin",
    "Palossand",
    "Passimian",
    "Pawmi",
    "Pawmo",
    "Pawmot",
    "Pawniard",
    "Pecharunt",
    "Pelipper",
    "Perrserker",
    "Persian",
    "Persian-Alola",
    "Petilil",
    "Phanpy",
    "Phantump",
    "Phione",
    "Pichu",
    "Pignite",
    "Pikachu",
    "Pikipek",
    "Piloswine",
    "Pincurchin",
    "Pineco",
    "Piplup",
    "Plusle",
    "Politoed",
    "Poliwag",
    "Poliwhirl",
    "Poliwrath",
    "Poltchageist",
    "Polteageist",
    "Poochyena",
    "Popplio",
    "Porygon",
    "Porygon-Z",
    "Porygon2",
    "Primarina",
    "Primeape",
    "Prinplup",
    "Probopass",
    "Psyduck",
    "Pupitar",
    "Pyroar",
    "Quagsire",
    "Quaquaval",
    "Quaxly",
    "Quaxwell",
    "Quilava",
    "Quilladin",
    "Qwilfish",
    "Qwilfish-Hisui",
    "Raboot",
    "Rabsca",
    "Raging Bolt",
    "Raichu",
    "Raichu-Alola",
    "Raikou",
    "Ralts",
    "Rampardos",
    "Rayquaza",
    "Regice",
    "Regidrago",
    "Regieleki",
    "Regigigas",
    "Regirock",
    "Registeel",
    "Rellor",
    "Reshiram",
    "Reuniclus",
    "Revavroom",
    "Rhydon",
    "Rhyhorn",
    "Rhyperior",
    "Ribombee",
    "Rillaboom",
    "Riolu",
    "Roaring Moon",
    "Rockruff",
    "Rolycoly",
    "Rookidee",
    "Rotom",
    "Rotom-Fan",
    "Rotom-Frost",
    "Rotom-Heat",
    "Rotom-Mow",
    "Rotom-Wash",
    "Rowlet",
    "Rufflet",
    "Sableye",
    "Salamence",
    "Salandit",
    "Salazzle",
    "Samurott",
    "Samurott-Hisui",
    "Sandaconda",
    "Sandile",
    "Sandshrew",
    "Sandshrew-Alola",
    "Sandslash",
    "Sandslash-Alola",
    "Sandy Shocks",
    "Sandygast",
    "Sawsbuck",
    "Scatterbug",
    "Sceptile",
    "Scizor",
    "Scorbunny",
    "Scovillain",
    "Scrafty",
    "Scraggy",
    "Scream Tail",
    "Scyther",
    "Seadra",
    "Seedot",
    "Seel",
    "Sentret",
    "Serperior",
    "Servine",
    "Seviper",
    "Sewaddle",
    "Shaymin",
    "Shaymin-Sky",
    "Shelgon",
    "Shellder",
    "Shellos",
    "Shieldon",
    "Shiftry",
    "Shinx",
    "Shroodle",
    "Shroomish",
    "Shuppet",
    "Silicobra",
    "Sinistcha",
    "Sinistea",
    "Skarmory",
    "Skeledirge",
    "Skiddo",
    "Skiploom",
    "Skrelp",
    "Skuntank",
    "Skwovet",
    "Slaking",
    "Slakoth",
    "Sliggoo",
    "Sliggoo-Hisui",
    "Slither Wing",
    "Slowbro",
    "Slowbro-Galar",
    "Slowking",
    "Slowking-Galar",
    "Slowpoke",
    "Slowpoke-Galar",
    "Slugma",
    "Smeargle",
    "Smoliv",
    "Sneasel",
    "Sneasel-Hisui",
    "Sneasler",
    "Snivy",
    "Snom",
    "Snorlax",
    "Snorunt",
    "Snover",
    "Snubbull",
    "Sobble",
    "Solgaleo",
    "Solosis",
    "Spectrier",
    "Spewpa",
    "Spidops",
    "Spinarak",
    "Spiritomb",
    "Spoink",
    "Sprigatito",
    "Squawkabilly",
    "Squirtle",
    "Stantler",
    "Staraptor",
    "Staravia",
    "Starly",
    "Steenee",
    "Stonjourner",
    "Stunky",
    "Sudowoodo",
    "Suicune",
    "Sunflora",
    "Sunkern",
    "Surskit",
    "Swablu",
    "Swadloon",
    "Swalot",
    "Swampert",
    "Swanna",
    "Swinub",
    "Sylveon",
    "Tadbulb",
    "Talonflame",
    "Tandemaus",
    "Tarountula",
    "Tatsugiri",
    "Tauros",
    "Tauros-Paldea-Aqua",
    "Tauros-Paldea-Blaze",
    "Tauros-Paldea-Combat",
    "Teddiursa",
    "Tentacool",
    "Tentacruel",
    "Tepig",
    "Terapagos",
    "Terapagos-Stellar",
    "Terapagos-Terastal",
    "Terrakion",
    "Thundurus",
    "Thundurus-Therian",
    "Thwackey",
    "Timburr",
    "Ting-Lu",
    "Tinkatink",
    "Tinkaton",
    "Tinkatuff",
    "Toedscool",
    "Toedscruel",
    "Torchic",
    "Torkoal",
    "Tornadus",
    "Tornadus-Therian",
    "Torracat",
    "Torterra",
    "Totodile",
    "Toucannon",
    "Toxapex",
    "Toxel",
    "Toxicroak",
    "Toxtricity",
    "Toxtricity-Low-Key",
    "Trapinch",
    "Treecko",
    "Trevenant",
    "Tropius",
    "Trumbeak",
    "Tsareena",
    "Turtwig",
    "Tynamo",
    "Typhlosion",
    "Typhlosion-Hisui",
    "Tyranitar",
    "Tyrogue",
    "Umbreon",
    "Ursaluna",
    "Ursaluna-Bloodmoon",
    "Ursaring",
    "Urshifu",
    "Urshifu-Rapid-Strike",
    "Uxie",
    "Vaporeon",
    "Varoom",
    "Veluza",
    "Venomoth",
    "Venonat",
    "Venusaur",
    "Vespiquen",
    "Vibrava",
    "Victreebel",
    "Vigoroth",
    "Vikavolt",
    "Vileplume",
    "Virizion",
    "Vivillon",
    "Volbeat",
    "Volcanion",
    "Volcarona",
    "Voltorb",
    "Voltorb-Hisui",
    "Vullaby",
    "Vulpix",
    "Vulpix-Alola",
    "Walking Wake",
    "Wartortle",
    "Wattrel",
    "Weavile",
    "Weepinbell",
    "Weezing",
    "Weezing-Galar",
    "Whimsicott",
    "Whiscash",
    "Wigglytuff",
    "Wiglett",
    "Wingull",
    "Wo-Chien",
    "Wooper",
    "Wooper-Paldea",
    "Wugtrio",
    "Wyrdeer",
    "Yanma",
    "Yanmega",
    "Yungoos",
    "Zacian",
    "Zacian-Crowned",
    "Zamazenta",
    "Zamazenta-Crowned",
    "Zangoose",
    "Zapdos",
    "Zapdos-Galar",
    "Zarude",
    "Zebstrika",
    "Zekrom",
    "Zoroark",
    "Zoroark-Hisui",
    "Zorua",
    "Zorua-Hisui",
    "Zweilous"
  ]
}
